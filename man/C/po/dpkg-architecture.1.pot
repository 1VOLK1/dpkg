# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2005-06-22  0:58+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING"

# type: TH
#: dpkg-architecture.1:1
#, no-wrap
msgid "DPKG-ARCHITECTURE"
msgstr ""

# type: TH
#: dpkg-architecture.1:1
#, no-wrap
msgid "2005-01-10"
msgstr ""

# type: TH
#: dpkg-architecture.1:1
#, no-wrap
msgid "Debian GNU/Linux"
msgstr ""

# type: SH
#: dpkg-architecture.1:2
#, no-wrap
msgid "NAME"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:4
msgid "dpkg-architecture - set and determine the architecture for package building"
msgstr ""

# type: IX
#: dpkg-architecture.1:4 dpkg-architecture.1:5
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:7
msgid "dpkg-architecture [options] [action]"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:12
msgid "Valid options: \\&B<-a>Debian-Architecture \\&B<-t>Gnu-System-Type \\&B<-f>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:16
msgid ""
"Valid actions: \\&B<-l>, B<-q>Variable-Name, B<-s>, B<-u>, B<-c> Command, "
"B<-L>"
msgstr ""

# type: IX
#: dpkg-architecture.1:16 dpkg-architecture.1:17
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:20
msgid ""
"dpkg-architecture does provide a facility to determine and set the build and "
"host architecture for package building."
msgstr ""

# type: IX
#: dpkg-architecture.1:20 dpkg-architecture.1:21
#, no-wrap
msgid "OVERVIEW"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:24
msgid ""
"The build architecture is always determined by an external call to dpkg, and "
"can not be set at the command line."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:31
msgid ""
"You can specify the host architecture by providing one or both of the "
"options B<-a> and B<-t>. The default is determined by an external call to "
"gcc, or the same as the build architecture if \\s-1CC\\s0 or gcc are both "
"not available. One out of B<-a> and B<-t> is sufficient, the value of the "
"other will be set to a usable default.  Indeed, it is often better to only "
"specify one, because dpkg-architecture will warn you if your choice doesn't "
"match the default."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:39
msgid ""
"The default action is B<-l>, which prints the environment variables, one "
"each line, in the format VARIABLE=value. If you are only interested in the "
"value of a single variable, you can use B<-q>. If you specify B<-s>, it will "
"output an export command. This can be used to set the environment variables "
"using eval. B<-u> does return a similar command to unset all "
"variables. B<-c> does execute a command in an environment which has all "
"variables set to the determined value."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:41
msgid "A list of valid architecture names can be printed with the B<-L> action."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:46
msgid ""
"Existing environment variables with the same name as used by the scripts are "
"not overwritten, except if the B<-f> force flag is present. This allows the "
"user to override a value even when the call to dpkg-architecture is buried "
"in some other script (for example dpkg-buildpackage)."
msgstr ""

# type: IX
#: dpkg-architecture.1:46 dpkg-architecture.1:47
#, no-wrap
msgid "TERMS"
msgstr ""

# type: IX
#: dpkg-architecture.1:48 dpkg-architecture.1:49
#, no-wrap
msgid "build machine"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:51
msgid "The machine the package is built on."
msgstr ""

# type: IX
#: dpkg-architecture.1:51 dpkg-architecture.1:52
#, no-wrap
msgid "host machine"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:54
msgid "The machine the package is built for."
msgstr ""

# type: IX
#: dpkg-architecture.1:54 dpkg-architecture.1:55
#, no-wrap
msgid "Debian Architecture"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:58
msgid ""
"The Debian archietcture string, which specifies the binary tree in the "
"\\s-1FTP\\s0 archive. Examples: i386, sparc, hurd-i386."
msgstr ""

# type: IP
#: dpkg-architecture.1:58
#, no-wrap
msgid "\\s-1GNU\\s0 System Type"
msgstr ""

# type: IX
#: dpkg-architecture.1:59
#, no-wrap
msgid "GNU System Type"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:63
msgid ""
"An architecture specification string consisting of two parts, cpu-system.  "
"Examples: i386-linux-gnu, sparc-linux-gnu, i386-gnu, x86_64-netbsd."
msgstr ""

# type: IX
#: dpkg-architecture.1:63 dpkg-architecture.1:64
#, no-wrap
msgid "EXAMPLES"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:67
msgid ""
"dpkg-buildpackage accepts the B<-a> option and passes it to "
"dpkg-architecture.  Other examples:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:69
msgid "CC=i386-gnu-gcc dpkg-architecture CW<\\*(C`-c\\*(C'> debian/rules build"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:71
msgid "eval `dpkg-architecture CW<\\*(C`-u\\*(C'>`"
msgstr ""

# type: IX
#: dpkg-architecture.1:71 dpkg-architecture.1:72
#, no-wrap
msgid "VARIABLES"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:74
msgid "The following variables are set by dpkg-architecture:"
msgstr ""

# type: IP
#: dpkg-architecture.1:74
#, no-wrap
msgid "\\s-1DEB_BUILD_ARCH\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:75
#, no-wrap
msgid "DEB_BUILD_ARCH"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:77
msgid "The Debian architecture of the build machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:77
#, no-wrap
msgid "\\s-1DEB_BUILD_ARCH_OS\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:78
#, no-wrap
msgid "DEB_BUILD_ARCH_OS"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:80
msgid "The Debian system name of the build machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:80
#, no-wrap
msgid "\\s-1DEB_BUILD_ARCH_CPU\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:81
#, no-wrap
msgid "DEB_BUILD_ARCH_CPU"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:83
msgid "The Debian cpu name of the build machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:83
#, no-wrap
msgid "\\s-1DEB_BUILD_GNU_TYPE\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:84
#, no-wrap
msgid "DEB_BUILD_GNU_TYPE"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:86
msgid "The \\s-1GNU\\s0 system type of the build machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:86
#, no-wrap
msgid "\\s-1DEB_BUILD_GNU_CPU\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:87
#, no-wrap
msgid "DEB_BUILD_GNU_CPU"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:89
msgid "The \\s-1CPU\\s0 part of \\s-1DEB_BUILD_GNU_TYPE\\s0"
msgstr ""

# type: IP
#: dpkg-architecture.1:89
#, no-wrap
msgid "\\s-1DEB_BUILD_GNU_SYSTEM\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:90
#, no-wrap
msgid "DEB_BUILD_GNU_SYSTEM"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:92
msgid "The System part of \\s-1DEB_BUILD_GNU_TYPE\\s0"
msgstr ""

# type: IP
#: dpkg-architecture.1:92
#, no-wrap
msgid "\\s-1DEB_HOST_ARCH\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:93
#, no-wrap
msgid "DEB_HOST_ARCH"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:95
msgid "The Debian architecture of the host machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:95
#, no-wrap
msgid "\\s-1DEB_HOST_ARCH_OS\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:96
#, no-wrap
msgid "DEB_HOST_ARCH_OS"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:98
msgid "The Debian system name of the host machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:98
#, no-wrap
msgid "\\s-1DEB_HOST_ARCH_CPU\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:99
#, no-wrap
msgid "DEB_HOST_ARCH_CPU"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:101
msgid "The Debian cpu name of the host machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:101
#, no-wrap
msgid "\\s-1DEB_HOST_GNU_TYPE\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:102
#, no-wrap
msgid "DEB_HOST_GNU_TYPE"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:104
msgid "The \\s-1GNU\\s0 system type of the host machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:104
#, no-wrap
msgid "\\s-1DEB_HOST_GNU_CPU\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:105
#, no-wrap
msgid "DEB_HOST_GNU_CPU"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:107
msgid "The \\s-1CPU\\s0 part of \\s-1DEB_HOST_GNU_TYPE\\s0"
msgstr ""

# type: IP
#: dpkg-architecture.1:107
#, no-wrap
msgid "\\s-1DEB_HOST_GNU_SYSTEM\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:108
#, no-wrap
msgid "DEB_HOST_GNU_SYSTEM"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:110
msgid "The System part of \\s-1DEB_HOST_GNU_TYPE\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:110 dpkg-architecture.1:111
#, no-wrap
msgid "DEBIAN/RULES"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:119
msgid ""
"The environment variables set by dpkg-architecture are passed to "
"debian/rules as make variables (see make documentation).  However, you "
"should not rely on them, as this breaks manual invocation of the script.  "
"Instead, you should always initialize them using dpkg-architecture with the "
"-q option.  Here are some examples, which also show how you can improve the "
"cross compilation support in your package:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:122 dpkg-architecture.1:139
msgid "Instead of:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:126
#, no-wrap
msgid ""
"ARCH=`dpkg --print-architecture`\n"
"configure $(\\s-1ARCH\\s0)-linux\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:129
msgid "please use the following:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:133
#, no-wrap
msgid ""
"\\&\\s-1DEB_BUILD_GNU_TYPE\\s0 := $(shell dpkg-architecture "
"-qDEB_BUILD_GNU_TYPE)\n"
"\\&\\s-1DEB_HOST_GNU_TYPE\\s0 := $(shell dpkg-architecture "
"-qDEB_HOST_GNU_TYPE)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:135
#, no-wrap
msgid ""
"configure --build=$(\\s-1DEB_BUILD_GNU_TYPE\\s0) "
"--host=$(\\s-1DEB_HOST_GNU_TYPE\\s0)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:145
#, no-wrap
msgid ""
"ARCH=`dpkg --print-architecture`\n"
"ifeq ($(\\s-1ARCH\\s0),alpha)\n"
"  ...\n"
"endif\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:148
msgid "please use:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:151
#, no-wrap
msgid "\\&\\s-1DEB_HOST_ARCH\\s0 := $(shell dpkg-architecture -qDEB_HOST_ARCH)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:155
#, no-wrap
msgid ""
"ifeq ($(\\s-1DEB_HOST_ARCH\\s0),alpha)\n"
"  ...\n"
"endif\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:159
msgid ""
"or if you only need to check the CPU or OS type, use the DEB_HOST_ARCH_CPU "
"or DEB_HOST_ARCH_OS variables."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:164
msgid ""
"In general, calling dpkg in the rules file to get architecture information "
"is deprecated (until you want to provide backward compatibility, see "
"below).  Especially the --print-architecture option is unreliable since we "
"have Debian architectures which don't equal a processor name."
msgstr ""

# type: IX
#: dpkg-architecture.1:165 dpkg-architecture.1:166
#, no-wrap
msgid "BACKWARD COMPATIBILITY"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:172
msgid ""
"The DEB_HOST_ARCH_CPU and DEB_HOST_ARCH_OS variables were only introduced in "
"relatively versions of I<dpkg-architecture> (since dpkg 1.13.2), before this "
"I<debian/rules> files tended to check the values of the DEB_HOST_GNU_CPU or "
"DEB_HOST_GNU_TYPE variables which have been subject to change."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:177
msgid ""
"Where I<debian/rules> files check these variables to decide how or what to "
"compile, this should be updated to use the new variables and values.  You "
"may wish to retain backwards compatibility with older version of dpkg-dev by "
"using the following code:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:181
#, no-wrap
msgid ""
"DEB_HOST_ARCH_CPU := $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU "
"2E<gt>/dev/null)\n"
"DEB_HOST_ARCH_OS := $(shell dpkg-architecture -qDEB_HOST_ARCH_OS "
"2E<gt>/dev/null)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:195
#, no-wrap
msgid ""
"# Take account of old dpkg-architecture output.\n"
"ifeq ($(DEB_HOST_ARCH_CPU),)\n"
"  DEB_HOST_ARCH_CPU := $(shell dpkg-architecture -qDEB_HOST_GNU_CPU)\n"
"  ifeq ($(DEB_HOST_ARCH_CPU),x86_64)\n"
"    DEB_HOST_ARCH_CPU := amd64\n"
"  endif\n"
"endif\n"
"ifeq ($(DEB_HOST_ARCH_OS),)\n"
"  DEB_HOST_ARCH_OS := $(subst -gnu,,$(shell dpkg-architecture "
"-qDEB_HOST_GNU_SYSTEM))\n"
"  ifeq ($(DEB_HOST_ARCH_OS),gnu)\n"
"    DEB_HOST_ARCH_OS := hurd\n"
"  endif\n"
"endif\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:198
msgid "And similarly for DEB_BUILD_ARCH_CPU and DEB_BUILD_ARCH_OS."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:201
msgid ""
"If you still wish to support versions of dpkg-dev that did not include "
"I<dpkg-architetcure>, the following does the job:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:211
#, no-wrap
msgid ""
"\\&\\s-1DEB_BUILD_ARCH\\s0 := $(shell dpkg --print-architecture)\n"
"\\&\\s-1DEB_BUILD_GNU_CPU\\s0 := $(patsubst "
"hurd-%,%,$(\\s-1DEB_BUILD_ARCH\\s0))\n"
"ifeq ($(filter-out hurd-%,$(\\s-1DEB_BUILD_ARCH\\s0)),)\n"
"  \\s-1DEB_BUILD_GNU_SYSTEM\\s0 := gnu\n"
"else\n"
"  \\s-1DEB_BUILD_GNU_SYSTEM\\s0 := linux-gnu\n"
"endif\n"
"DEB_BUILD_GNU_TYPE=$(\\s-1DEB_BUILD_GNU_CPU\\s0)-$(\\s-1DEB_BUILD_GNU_SYSTEM\\s0)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:216
#, no-wrap
msgid ""
"\\&\\s-1DEB_HOST_ARCH\\s0 := $(\\s-1DEB_BUILD_ARCH\\s0)\n"
"\\&\\s-1DEB_HOST_GNU_CPU\\s0 := $(\\s-1DEB_BUILD_GNU_CPU\\s0)\n"
"\\&\\s-1DEB_HOST_GNU_SYSTEM\\s0 := $(\\s-1DEB_BUILD_GNU_SYSTEM\\s0)\n"
"\\&\\s-1DEB_HOST_GNU_TYPE\\s0 := $(\\s-1DEB_BUILD_GNU_TYPE\\s0)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:220
msgid ""
"Put a subset of these lines at the top of your debian/rules file; these "
"default values will be overwritten if dpkg-architecture is used."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:227
msgid ""
"You don't need the full set. Choose a consistent set which contains the "
"values you use in the rules file. For example, if you only need the host "
"Debian architecture, `DEB_HOST_ARCH=`dpkg --print-architecture` is "
"sufficient (this is indeed the Debian architecture of the build machine, but "
"remember that we are only trying to be backward compatible with native "
"compilation)."
msgstr ""

# type: IX
#: dpkg-architecture.1:227 dpkg-architecture.1:228
#, no-wrap
msgid "SEE ALSO"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:231
msgid "dpkg-buildpackage dpkg-cross"
msgstr ""

# type: IX
#: dpkg-architecture.1:231 dpkg-architecture.1:232
#, no-wrap
msgid "CONTACT"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:235
msgid ""
"If you have questions about the usage of the make variables in your rules "
"files, or about cross compilation support in your packages, please email "
"me.  The address is Marcus Brinkmann E<lt>brinkmd@debian.orgE<gt>."
msgstr ""
