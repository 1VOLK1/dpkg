# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2006-02-28  1:40+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING\n"

# type: TH
#: dpkg-architecture.1:1
#, no-wrap
msgid "dpkg-architecture"
msgstr ""

# type: TH
#: dpkg-architecture.1:1
#, no-wrap
msgid "2006-02-28"
msgstr ""

# type: TH
#: dpkg-architecture.1:1
#, no-wrap
msgid "Debian Project"
msgstr ""

# type: TH
#: dpkg-architecture.1:1
#, no-wrap
msgid "dpkg utililties"
msgstr ""

# type: SH
#: dpkg-architecture.1:2
#, no-wrap
msgid "NAME"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:4
msgid ""
"dpkg-architecture - set and determine the architecture for package building"
msgstr ""

# type: IX
#: dpkg-architecture.1:5
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:9
msgid "B<dpkg-architecture> [I<options>] [I<action>]"
msgstr ""

# type: IX
#: dpkg-architecture.1:11
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:14
msgid ""
"dpkg-architecture does provide a facility to determine and set the build and "
"host architecture for package building."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:17
msgid ""
"The build architecture is always determined by an external call to dpkg, and "
"can not be set at the command line."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:25
msgid ""
"You can specify the host architecture by providing one or both of the "
"options B<-a> and B<-t>. The default is determined by an external call to "
"gcc, or the same as the build architecture if \\s-1CC\\s0 or gcc are both "
"not available. One out of B<-a> and B<-t> is sufficient, the value of the "
"other will be set to a usable default. Indeed, it is often better to only "
"specify one, because B<dpkg-architecture> will warn you if your choice does "
"not match the default."
msgstr ""

# type: SH
#: dpkg-architecture.1:26
#, no-wrap
msgid "OPTIONS"
msgstr ""

# type: TP
#: dpkg-architecture.1:27
#, no-wrap
msgid "B<-a>I<debian-architecture>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:30
msgid "Set the Debian architecture."
msgstr ""

# type: TP
#: dpkg-architecture.1:30
#, no-wrap
msgid "B<-t>I<gnu-system-type>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:33
msgid "Set the GNU system type."
msgstr ""

# type: TP
#: dpkg-architecture.1:33
#, no-wrap
msgid "B<-f>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:39
msgid ""
"Existing environment variables with the same name as used by the scripts are "
"not overwritten, except if this force flag is present. This allows the user "
"to override a value even when the call to B<dpkg-architecture> is buried in "
"some other script (for example B<dpkg-buildpackage>)."
msgstr ""

# type: SH
#: dpkg-architecture.1:40
#, no-wrap
msgid "ACTIONS"
msgstr ""

# type: TP
#: dpkg-architecture.1:41
#, no-wrap
msgid "B<-l>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:45
msgid ""
"Print the environment variables, one each line, in the format "
"I<VARIABLE=value>. This is the default action."
msgstr ""

# type: TP
#: dpkg-architecture.1:45
#, no-wrap
msgid "B<-e>I<debian-architecture>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:49
msgid ""
"Check for equality between two Debian Architectures, by default it will "
"compare against the currect Debian Architecture, being it the host."
msgstr ""

# type: TP
#: dpkg-architecture.1:49
#, no-wrap
msgid "B<-i>I<architecture-alias>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:53
msgid ""
"Check for identity of the current Debian Architecture against an "
"Architecture Alias."
msgstr ""

# type: TP
#: dpkg-architecture.1:53
#, no-wrap
msgid "B<-q>I<variable-Name>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:56
msgid "Print the value of a single variable."
msgstr ""

# type: TP
#: dpkg-architecture.1:56
#, no-wrap
msgid "B<-s>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:60
msgid ""
"Print an export command. This can be used to set the environment variables "
"using eval."
msgstr ""

# type: TP
#: dpkg-architecture.1:60
#, no-wrap
msgid "B<-u>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:63
msgid "Print a similar command to B<-s> but to unset all variables."
msgstr ""

# type: TP
#: dpkg-architecture.1:63
#, no-wrap
msgid "B<-c>I< command>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:67
msgid ""
"Execute a I<command> in an environment which has all variables set to the "
"determined value."
msgstr ""

# type: TP
#: dpkg-architecture.1:67
#, no-wrap
msgid "B<-L>"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:70
msgid "Print a list of valid architecture names."
msgstr ""

# type: IX
#: dpkg-architecture.1:71
#, no-wrap
msgid "TERMS"
msgstr ""

# type: IX
#: dpkg-architecture.1:72
#, no-wrap
msgid "build machine"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:74
msgid "The machine the package is built on."
msgstr ""

# type: IX
#: dpkg-architecture.1:74
#, no-wrap
msgid "host machine"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:76
msgid "The machine the package is built for."
msgstr ""

# type: IX
#: dpkg-architecture.1:76
#, no-wrap
msgid "Debian Architecture"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:79
msgid ""
"The Debian architecture string, which specifies the binary tree in the \\s-"
"1FTP\\s0 archive. Examples: i386, sparc, hurd-i386."
msgstr ""

# type: IX
#: dpkg-architecture.1:79
#, no-wrap
msgid "Architecture Alias"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:83
msgid ""
"An architecture alias is a wildcard architecture that will match any real "
"architecture being part of it. The general form is E<lt>kernelE<gt>-"
"E<lt>cpuE<gt>.  Examples: linux-any, linux-alpha, any-i386, hurd-any."
msgstr ""

# type: IP
#: dpkg-architecture.1:83
#, no-wrap
msgid "\\s-1GNU\\s0 System Type"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:87
msgid ""
"An architecture specification string consisting of two parts, cpu-system. "
"Examples: i386-linux-gnu, sparc-linux-gnu, i386-gnu, x86_64-netbsd."
msgstr ""

# type: IX
#: dpkg-architecture.1:88
#, no-wrap
msgid "EXAMPLES"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:91
msgid ""
"B<dpkg-buildpackage> accepts the B<-a> option and passes it to B<dpkg-"
"architecture>. Other examples:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:93
msgid "CC=i386-gnu-gcc dpkg-architecture CW<\\*(C`-c\\*(C'> debian/rules build"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:95
msgid "eval \\`dpkg-architecture CW<\\*(C`-u\\*(C'>\\`"
msgstr ""

# type: IX
#: dpkg-architecture.1:96
#, no-wrap
msgid "VARIABLES"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:98
msgid "The following variables are set by B<dpkg-architecture>:"
msgstr ""

# type: IP
#: dpkg-architecture.1:98
#, no-wrap
msgid "\\s-1DEB_BUILD_ARCH\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:100
msgid "The Debian architecture of the build machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:100
#, no-wrap
msgid "\\s-1DEB_BUILD_ARCH_OS\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:102
msgid "The Debian system name of the build machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:102
#, no-wrap
msgid "\\s-1DEB_BUILD_ARCH_CPU\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:104
msgid "The Debian cpu name of the build machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:104
#, no-wrap
msgid "\\s-1DEB_BUILD_GNU_TYPE\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:106
msgid "The \\s-1GNU\\s0 system type of the build machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:106
#, no-wrap
msgid "\\s-1DEB_BUILD_GNU_CPU\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:108
msgid "The \\s-1CPU\\s0 part of \\s-1DEB_BUILD_GNU_TYPE\\s0"
msgstr ""

# type: IP
#: dpkg-architecture.1:108
#, no-wrap
msgid "\\s-1DEB_BUILD_GNU_SYSTEM\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:110
msgid "The System part of \\s-1DEB_BUILD_GNU_TYPE\\s0"
msgstr ""

# type: IP
#: dpkg-architecture.1:110
#, no-wrap
msgid "\\s-1DEB_HOST_ARCH\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:112
msgid "The Debian architecture of the host machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:112
#, no-wrap
msgid "\\s-1DEB_HOST_ARCH_OS\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:114
msgid "The Debian system name of the host machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:114
#, no-wrap
msgid "\\s-1DEB_HOST_ARCH_CPU\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:116
msgid "The Debian cpu name of the host machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:116
#, no-wrap
msgid "\\s-1DEB_HOST_GNU_TYPE\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:118
msgid "The \\s-1GNU\\s0 system type of the host machine."
msgstr ""

# type: IP
#: dpkg-architecture.1:118
#, no-wrap
msgid "\\s-1DEB_HOST_GNU_CPU\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:120
msgid "The \\s-1CPU\\s0 part of \\s-1DEB_HOST_GNU_TYPE\\s0"
msgstr ""

# type: IP
#: dpkg-architecture.1:120
#, no-wrap
msgid "\\s-1DEB_HOST_GNU_SYSTEM\\s0"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:122
msgid "The System part of \\s-1DEB_HOST_GNU_TYPE\\s0"
msgstr ""

# type: IX
#: dpkg-architecture.1:123
#, no-wrap
msgid "DEBIAN/RULES"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:131
msgid ""
"The environment variables set by B<dpkg-architecture> are passed to I<debian/"
"rules> as make variables (see make documentation). However, you should not "
"rely on them, as this breaks manual invocation of the script. Instead, you "
"should always initialize them using B<dpkg-architecture> with the -q option. "
"Here are some examples, which also show how you can improve the cross "
"compilation support in your package:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:134 dpkg-architecture.1:151
msgid "Instead of:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:138
#, no-wrap
msgid ""
"ARCH=\\`dpkg --print-architecture\\`\n"
"configure $(\\s-1ARCH\\s0)-linux\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:141
msgid "please use the following:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:145
#, no-wrap
msgid ""
"\\&\\s-1DEB_BUILD_GNU_TYPE\\s0 := $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)\n"
"\\&\\s-1DEB_HOST_GNU_TYPE\\s0 := $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:147
#, no-wrap
msgid "configure --build=$(\\s-1DEB_BUILD_GNU_TYPE\\s0) --host=$(\\s-1DEB_HOST_GNU_TYPE\\s0)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:157
#, no-wrap
msgid ""
"ARCH=\\`dpkg --print-architecture\\`\n"
"ifeq ($(\\s-1ARCH\\s0),alpha)\n"
"  ...\n"
"endif\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:160
msgid "please use:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:163
#, no-wrap
msgid "\\&\\s-1DEB_HOST_ARCH\\s0 := $(shell dpkg-architecture -qDEB_HOST_ARCH)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:167
#, no-wrap
msgid ""
"ifeq ($(\\s-1DEB_HOST_ARCH\\s0),alpha)\n"
"  ...\n"
"endif\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:171
msgid ""
"or if you only need to check the CPU or OS type, use the DEB_HOST_ARCH_CPU "
"or DEB_HOST_ARCH_OS variables."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:176
msgid ""
"In general, calling dpkg in the rules file to get architecture information "
"is deprecated (until you want to provide backward compatibility, see "
"below).  Especially the --print-architecture option is unreliable since we "
"have Debian architectures which don't equal a processor name."
msgstr ""

# type: IX
#: dpkg-architecture.1:177
#, no-wrap
msgid "BACKWARD COMPATIBILITY"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:183
msgid ""
"The DEB_HOST_ARCH_CPU and DEB_HOST_ARCH_OS variables were only introduced in "
"relatively recent versions of B<dpkg-architecture> (since dpkg 1.13.2), "
"before this I<debian/rules> files tended to check the values of the "
"DEB_HOST_GNU_CPU or DEB_HOST_GNU_TYPE variables which have been subject to "
"change."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:188
msgid ""
"Where I<debian/rules> files check these variables to decide how or what to "
"compile, this should be updated to use the new variables and values.  You "
"may wish to retain backwards compatibility with older version of dpkg-dev by "
"using the following code:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:192
#, no-wrap
msgid ""
"DEB_HOST_ARCH_CPU := $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU 2E<gt>/dev/null)\n"
"DEB_HOST_ARCH_OS := $(shell dpkg-architecture -qDEB_HOST_ARCH_OS 2E<gt>/dev/null)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:206
#, no-wrap
msgid ""
"# Take account of old dpkg-architecture output.\n"
"ifeq ($(DEB_HOST_ARCH_CPU),)\n"
"  DEB_HOST_ARCH_CPU := $(shell dpkg-architecture -qDEB_HOST_GNU_CPU)\n"
"  ifeq ($(DEB_HOST_ARCH_CPU),x86_64)\n"
"    DEB_HOST_ARCH_CPU := amd64\n"
"  endif\n"
"endif\n"
"ifeq ($(DEB_HOST_ARCH_OS),)\n"
"  DEB_HOST_ARCH_OS := $(subst -gnu,,$(shell dpkg-architecture -qDEB_HOST_GNU_SYSTEM))\n"
"  ifeq ($(DEB_HOST_ARCH_OS),gnu)\n"
"    DEB_HOST_ARCH_OS := hurd\n"
"  endif\n"
"endif\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:209
msgid "And similarly for DEB_BUILD_ARCH_CPU and DEB_BUILD_ARCH_OS."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:212
msgid ""
"If you still wish to support versions of dpkg-dev that did not include "
"B<dpkg-architecture>, the following does the job:"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:222
#, no-wrap
msgid ""
"\\&\\s-1DEB_BUILD_ARCH\\s0 := $(shell dpkg --print-architecture)\n"
"\\&\\s-1DEB_BUILD_GNU_CPU\\s0 := $(patsubst hurd-%,%,$(\\s-1DEB_BUILD_ARCH\\s0))\n"
"ifeq ($(filter-out hurd-%,$(\\s-1DEB_BUILD_ARCH\\s0)),)\n"
"  \\s-1DEB_BUILD_GNU_SYSTEM\\s0 := gnu\n"
"else\n"
"  \\s-1DEB_BUILD_GNU_SYSTEM\\s0 := linux-gnu\n"
"endif\n"
"DEB_BUILD_GNU_TYPE=$(\\s-1DEB_BUILD_GNU_CPU\\s0)-$(\\s-1DEB_BUILD_GNU_SYSTEM\\s0)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:227
#, no-wrap
msgid ""
"\\&\\s-1DEB_HOST_ARCH\\s0 := $(\\s-1DEB_BUILD_ARCH\\s0)\n"
"\\&\\s-1DEB_HOST_GNU_CPU\\s0 := $(\\s-1DEB_BUILD_GNU_CPU\\s0)\n"
"\\&\\s-1DEB_HOST_GNU_SYSTEM\\s0 := $(\\s-1DEB_BUILD_GNU_SYSTEM\\s0)\n"
"\\&\\s-1DEB_HOST_GNU_TYPE\\s0 := $(\\s-1DEB_BUILD_GNU_TYPE\\s0)\n"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:231
msgid ""
"Put a subset of these lines at the top of your debian/rules file; these "
"default values will be overwritten if dpkg-architecture is used."
msgstr ""

# type: Plain text
#: dpkg-architecture.1:238
msgid ""
"You don't need the full set. Choose a consistent set which contains the "
"values you use in the rules file. For example, if you only need the host "
"Debian architecture, `DEB_HOST_ARCH=\\`dpkg --print-architecture\\`' is "
"sufficient (this is indeed the Debian architecture of the build machine, but "
"remember that we are only trying to be backward compatible with native "
"compilation)."
msgstr ""

# type: IX
#: dpkg-architecture.1:239
#, no-wrap
msgid "SEE ALSO"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:242
msgid "B<dpkg-buildpackage>(1), B<dpkg-cross>(1)."
msgstr ""

# type: SH
#: dpkg-architecture.1:243
#, no-wrap
msgid "AUTHOR"
msgstr ""

# type: Plain text
#: dpkg-architecture.1:247
msgid ""
"B<dpkg-architecture> and this man page were initially written by Marcus "
"Brinkmann E<lt>brinkmd@debian.orgE<gt>."
msgstr ""
